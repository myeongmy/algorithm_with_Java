//백준 13458번 (시험 감독)
// 단순 구현문제? 수학 문제에 해당하는 듯하다.
/*문제
총 N개의 시험장이 있고, 각각의 시험장마다 응시자들이 있다. i번 시험장에 있는 응시자의 수는 Ai명이다.

감독관은 총감독관과 부감독관으로 두 종류가 있다. 총감독관은 한 방에서 감시할 수 있는 응시자의 수가 B명이고, 부감독관은 한 방에서 감시할 수 있는 응시자의 수가 C명이다.

각각의 시험장에 총감독관은 오직 1명만 있어야 하고, 부감독관은 여러 명 있어도 된다.

각 시험장마다 응시생들을 모두 감시해야 한다. 이때, 필요한 감독관 수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 시험장의 개수 N(1 ≤ N ≤ 1,000,000)이 주어진다.

둘째 줄에는 각 시험장에 있는 응시자의 수 Ai (1 ≤ Ai ≤ 1,000,000)가 주어진다.

셋째 줄에는 B와 C가 주어진다. (1 ≤ B, C ≤ 1,000,000)

출력
각 시험장마다 응시생을 모두 감독하기 위해 필요한 감독관의 최소 수를 출력한다.*/

package 삼성SW역량테스트기출;

import java.io.*;

public class N_13458 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		try {
			int N = Integer.parseInt(br.readLine());
			int[] A = new int[N];
			String[] arr = br.readLine().split(" ");
			for (int i = 0; i < N; i++) {
				A[i] = Integer.parseInt(arr[i]);
			}
			arr = br.readLine().split(" ");
			int B = Integer.parseInt(arr[0]); // 총 감독관이 감시할 수 있는 응시생 수
			int C = Integer.parseInt(arr[1]); // 부 감독관이 감시할 수 있는 응시생 수

			long primeNum = 0; // 필요한 총 감독관 수
			long subNum = 0;
			// 총 감독관이 감독하는 학생 수를 제거하고 남은 학생 수
			for (int i = 0; i < N; i++) {
				A[i] = A[i] - B;
				primeNum++;
			}
			// 부 감독관 수 계산
			for (int i = 0; i < N; i++) {
				if(A[i] <=0 ) continue;
				subNum += A[i] / C;
				if (A[i] % C != 0)
					subNum += 1;
			}
			System.out.println(subNum + primeNum);
			System.out.println(5%-2);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
