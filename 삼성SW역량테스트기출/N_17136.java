//백준 17136번 (색종이 붙이기)
//단순 브루트 포스 문제
//틀린 풀이 (처음 시도한 방식: 그리디 알고리즘)
/*문제
<그림 1>과 같이 정사각형 모양을 한 다섯 종류의 색종이가 있다. 색종이의 크기는 1×1, 2×2, 3×3, 4×4, 5×5로 총 다섯 종류가 있으며, 각 종류의 색종이는 5개씩 가지고 있다.


<그림 1>

색종이를 크기가 10×10인 종이 위에 붙이려고 한다. 종이는 1×1 크기의 칸으로 나누어져 있으며, 각각의 칸에는 0 또는 1이 적혀 있다. 1이 적힌 칸은 모두 색종이로 덮여져야 한다. 색종이를 붙일 때는 종이의 경계 밖으로 나가서는 안되고, 겹쳐도 안 된다. 또, 칸의 경계와 일치하게 붙여야 한다. 0이 적힌 칸에는 색종이가 있으면 안 된다.

종이가 주어졌을 때, 1이 적힌 모든 칸을 붙이는데 필요한 색종이의 최소 개수를 구해보자.

입력
총 10개의 줄에 종이의 각 칸에 적힌 수가 주어진다.

출력
모든 1을 덮는데 필요한 색종이의 최소 개수를 출력한다. 1을 모두 덮는 것이 불가능한 경우에는 -1을 출력한다.*/

package 삼성SW역량테스트기출;

import java.util.*;

public class N_17136 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner s = new Scanner(System.in);
		int[][] A = new int[10][10];
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				A[i][j] = s.nextInt();
			}
		}
		// 5x5 색종이
		int cnt_5 = 0;
		for (int i = 0; i <= 10 - 5; i++) {
			for (int j = 0; j <= 10 - 5; j++) {
				if (A[i][j] == 1 && A[i][j + 1] == 1 && A[i][j + 2] == 1 && A[i][j + 3] == 1 && A[i][j + 4] == 1
						&& A[i + 1][j] == 1 && A[i + 1][j + 1] == 1 && A[i + 1][j + 2] == 1 && A[i + 1][j + 3] == 1
						&& A[i + 1][j + 4] == 1 && A[i + 2][j] == 1 && A[i + 2][j + 1] == 1 && A[i + 2][j + 2] == 1
						&& A[i + 2][j + 3] == 1 && A[i + 2][j + 4] == 1 && A[i + 3][j] == 1 && A[i + 3][j + 1] == 1
						&& A[i + 3][j + 2] == 1 && A[i + 3][j + 3] == 1 && A[i + 3][j + 4] == 1 && A[i + 4][j] == 1
						&& A[i + 4][j + 1] == 1 && A[i + 4][j + 2] == 1 && A[i + 4][j + 3] == 1
						&& A[i + 4][j + 4] == 1) {
					cnt_5++;
					A[i][j] = 0;
					A[i][j + 1] = 0;
					A[i][j + 2] = 0;
					A[i][j + 3] = 0;
					A[i][j + 4] = 0;
					A[i + 1][j] = 0;
					A[i + 1][j + 1] = 0;
					A[i + 1][j + 2] = 0;
					A[i + 1][j + 3] = 0;
					A[i + 1][j + 4] = 0;
					A[i + 2][j] = 0;
					A[i + 2][j + 1] = 0;
					A[i + 2][j + 2] = 0;
					A[i + 2][j + 3] = 0;
					A[i + 2][j + 4] = 0;
					A[i + 3][j] = 0;
					A[i + 3][j + 1] = 0;
					A[i + 3][j + 2] = 0;
					A[i + 3][j + 3] = 0;
					A[i + 3][j + 4] = 0;
					A[i + 4][j] = 0;
					A[i + 4][j + 1] = 0;
					A[i + 4][j + 2] = 0;
					A[i + 4][j + 3] = 0;
					A[i + 4][j + 4] = 0;
				}
			}
		}
		if (cnt_5 > 5) {
			System.out.println(-1);
			System.exit(0);
		}

		// 4x4 색종이
		int cnt_4 = 0;
		for (int i = 0; i <= 10 - 4; i++) {
			for (int j = 0; j <= 10 - 4; j++) {
				if (A[i][j] == 1 && A[i][j + 1] == 1 && A[i][j + 2] == 1 && A[i][j + 3] == 1 && A[i + 1][j] == 1
						&& A[i + 1][j + 1] == 1 && A[i + 1][j + 2] == 1 && A[i + 1][j + 3] == 1 && A[i + 2][j] == 1
						&& A[i + 2][j + 1] == 1 && A[i + 2][j + 2] == 1 && A[i + 2][j + 3] == 1 && A[i + 3][j] == 1
						&& A[i + 3][j + 1] == 1 && A[i + 3][j + 2] == 1 && A[i + 3][j + 3] == 1) {
					cnt_4++;
					A[i][j] = 0;
					A[i][j + 1] = 0;
					A[i][j + 2] = 0;
					A[i][j + 3] = 0;
					A[i + 1][j] = 0;
					A[i + 1][j + 1] = 0;
					A[i + 1][j + 2] = 0;
					A[i + 1][j + 3] = 0;
					A[i + 2][j] = 0;
					A[i + 2][j + 1] = 0;
					A[i + 2][j + 2] = 0;
					A[i + 2][j + 3] = 0;
					A[i + 3][j] = 0;
					A[i + 3][j + 1] = 0;
					A[i + 3][j + 2] = 0;
					A[i + 3][j + 3] = 0;
				}
			}
		}
		if (cnt_4 > 5) {
			System.out.println(-1);
			System.exit(0);
		}

		// 3x3 색종이
		int cnt_3 = 0;
		for (int i = 0; i <= 10 - 3; i++) {
			for (int j = 0; j <= 10 - 3; j++) {
				if (A[i][j] == 1 && A[i][j + 1] == 1 && A[i][j + 2] == 1 && A[i + 1][j] == 1 && A[i + 1][j + 1] == 1
						&& A[i + 1][j + 2] == 1 && A[i + 2][j] == 1 && A[i + 2][j + 1] == 1 && A[i + 2][j + 2] == 1) {
					cnt_3++;
					A[i][j] = 0;
					A[i][j + 1] = 0;
					A[i][j + 2] = 0;
					A[i + 1][j] = 0;
					A[i + 1][j + 1] = 0;
					A[i + 1][j + 2] = 0;
					A[i + 2][j] = 0;
					A[i + 2][j + 1] = 0;
					A[i + 2][j + 2] = 0;
				}
			}
		}
		if (cnt_3 > 5) {
			System.out.println(-1);
			System.exit(0);
		}

		// 2x2 색종이
		int cnt_2 = 0;
		for (int i = 0; i <= 10 - 2; i++) {
			for (int j = 0; j <= 10 - 2; j++) {
				if (A[i][j] == 1 && A[i][j + 1] == 1 && A[i + 1][j] == 1 && A[i + 1][j + 1] == 1) {
					cnt_2++;
					A[i][j] = 0;
					A[i][j + 1] = 0;
					A[i + 1][j] = 0;
					A[i + 1][j + 1] = 0;
				}
			}
		}
		if (cnt_2 > 5) {
			System.out.println(-1);
			System.exit(0);
		}

		// 1x1 색종이
		int cnt_1 = 0;
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				if (A[i][j] == 1) {
					cnt_1++;
					A[i][j] = 0;
				}
			}
		}
		if (cnt_1 > 5) {
			System.out.println(-1);
			System.exit(0);
		}
		System.out.println(cnt_5 + cnt_4 + cnt_3 + cnt_2 + cnt_1);
	}

}
