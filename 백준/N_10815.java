//백준 10815번
//이진 탐색 문제
/*문제
숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 가지고 있는지 아닌지를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이가 주어진다. 둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다. 두 숫자 카드에 같은 수가 적혀있는 경우는 없다.

셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다. 넷째 줄에는 상근이가 가지고 있는 숫자 카드인지 아닌지를 구해야 할 M개의 정수가 주어지며, 이 수는 공백으로 구분되어져 있다. 이 수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다

출력
첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 가지고 있으면 1을, 아니면 0을 공백으로 구분해 출력한다.*/

package 백준;

import java.util.*;

public class N_10815 {
	static int binarySearch(int [] A, int start, int end, int key) {
		if(start > end)
			return -1;
		else {
			int mid = (start+end)/2;
			if(A[mid] == key)
				return mid;
			else if(A[mid] < key)
				return binarySearch(A, mid+1, end, key);
			else
				return binarySearch(A, start, mid-1, key);
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner s = new Scanner(System.in);
		int N = s.nextInt();
		int[] A = new int[N];
		for (int i = 0; i < N; i++)
			A[i] = s.nextInt();
		Arrays.sort(A);
		int M = s.nextInt();
		for (int i = 0; i < M; i++) {
			//int result = Arrays.binarySearch(A, s.nextInt());
			int result = binarySearch(A, 0, A.length-1, s.nextInt());
			if (result >= 0)
				System.out.print(1+" ");
			else
				System.out.print(0+" ");
		}
	}

}
